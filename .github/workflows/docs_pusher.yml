# Copyright Cam Mannett 2020
#
# See LICENSE file
# 

# This workflow uses Doxygen to generate HTML API documentation, which is then
# pushed to the project's GitHub Pages
name: Documentation Generator

on:
  push:
    branches: [ master ]

jobs:
  documentation:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    # We need to build the generated files can be documented.  We will do a
    # WASM build here to generate the playground data too
    - name: Update packages
      run: |
        wget http://mirrors.kernel.org/ubuntu/pool/main/b/boost1.71/libboost1.71-dev_1.71.0-6ubuntu6_amd64.deb
        sudo apt install doxygen graphviz ./libboost1.71-dev_1.71.0-6ubuntu6_amd64.deb

    - name: Install Emscripten
      run: |
        cd ${GITHUB_WORKSPACE}/..
        git clone https://github.com/emscripten-core/emsdk.git
        cd ./emsdk/
        ./emsdk install latest-upstream
        ./emsdk activate latest-upstream

    - name: Build
      run: |
        source ${GITHUB_WORKSPACE}/../emsdk/emsdk_env.sh
        mkdir ${GITHUB_WORKSPACE}/../wasm
        cd ${GITHUB_WORKSPACE}/../wasm
        emcmake cmake -DWASM_BUILD=ON -DCMAKE_BUILD_TYPE=Release -DBoost_INCLUDE_DIR=/usr/include ${GITHUB_WORKSPACE}
        emmake make -j4 malbolge_wasm
      
    - name: Generate API documentation
      run: |
        cd ${GITHUB_WORKSPACE}/docs
        doxygen

    - name: Copy over WASM playground
      run: |
        cd ${GITHUB_WORKSPACE}/../wasm
        cp ./malbolge.js ./malbolge.wasm ./malbolge.worker.js ${GITHUB_WORKSPACE}/playground/
        cp -rf ${GITHUB_WORKSPACE}/playground ${GITHUB_WORKSPACE}/docs/doxygen/html/

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        publish_dir: ./docs/doxygen/html
